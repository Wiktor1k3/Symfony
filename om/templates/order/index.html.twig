{# templates/list/index.html.twig #}
{% extends 'base.html.twig' %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('assets/css/list.css') }}">
{% endblock %}

{% block body %}
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="card bg-light mb-3 mt-3">
                    <div class="card-body">
                        <div class="card-header">Lista zamówień</div>

                        {# Wyszukiwarka #}
                        <div class="form-group">
                            <label for="searchInput">Szukaj:</label>
                            <input type="text" id="searchInput" class="form-control" placeholder="Wprowadź frazę do wyszukania">
                        </div>

                        <table class="table">
                            <thead>
                            <tr>
                                <th class="sortable" data-sort-key="status">ID <span class="sort-icon"></span></th>
                                <th class="sortable" data-sort-key="createdAt">Name <span class="sort-icon"></span></th>
                                <th class="sortable" data-sort-key="updatedAt">Lastname <span class="sort-icon"></span></th>
                            </tr>
                            </thead>
                            <tbody>
                            {% for element in elements %}
                                <tr>
                                    <td>{{ element.status}}</td>
                                    <td>{{ element.createdAt | date('Y-m-d')}}</td>
                                    <td>{{ element.updatedAt | date('Y-m-d')}}</td>
                                    <td>
                                        <a href="{{ path('customer_update', {'id': element.id}) }}">Edytuj</a>
                                        <a href="{{ path('customer_delete', {'id': element.id}) }}"
                                           onclick="return confirm('Czy na pewno chcesz usunąć to zamówienie?')">Usuń</a>
                                    </td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>

                        <div class="form-group">
                            <a href="{{ path('customer_create') }}" class="btn btn-info">Dodaj</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="{{ asset('assets/jss/edit_list.js') }}"></script>

    <script>
        $(document).ready(function () {
            // Obsługa wyszukiwania
            $("#searchInput").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $("table tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });

        $(document).ready(function () {
            // Zmienne do przechowywania kierunku sortowania i klucza sortowania
            let sortKey = null;
            let sortDirection = 'asc';

            // Funkcja do aktualizacji ikony sortowania w nagłówku kolumny
            function updateSortIcon() {
                $(".sort-icon").removeClass("fa-sort-up fa-sort-down");
                if (sortDirection === 'asc') {
                    $(`.sortable[data-sort-key="${sortKey}"] .sort-icon`).addClass("fa-sort-up");
                } else {
                    $(`.sortable[data-sort-key="${sortKey}"] .sort-icon`).addClass("fa-sort-down");
                }
            }

            // Obsługa kliknięcia na nagłówki kolumn do sortowania
            $(".sortable").on("click", function () {
                const clickedSortKey = $(this).data("sort-key");

                // Jeśli kliknięto tę samą kolumnę, zmień kierunek sortowania
                if (clickedSortKey === sortKey) {
                    sortDirection = sortDirection === 'asc' ? 'desc' : 'asc';
                } else {
                    sortKey = clickedSortKey;
                    sortDirection = 'asc';
                }

                // Wywołaj funkcję sortującą i zaktualizuj ikonę sortowania
                sortTable();
                updateSortIcon();
            });

            // Funkcja sortująca tabelę
            function sortTable() {
                const rows = $("tbody tr").get();

                rows.sort(function (rowA, rowB) {
                    const cellValueA = $(rowA).find(`td[data-sort-key="${sortKey}"]`).text().toLowerCase();
                    const cellValueB = $(rowB).find(`td[data-sort-key="${sortKey}"]`).text().toLowerCase();

                    if (sortDirection === 'asc') {
                        return cellValueA.localeCompare(cellValueB);
                    } else {
                        return cellValueB.localeCompare(cellValueA);
                    }
                });

                $("tbody").empty().append(rows);
            }
        });
    </script>
{% endblock %}

